#!/usr/bin/env python

import subprocess as sp
from typing import Generator, Iterable
import os


def fetch_branches() -> Generator[str, None, None]:
    cmd = ["git", "branch"]
    output = sp.run(cmd, stdout=sp.PIPE, check=True)
    for line in output.stdout.decode().split("\n"):
        yield line.replace("*", "").strip()


def map_branch_names_to_shas(branches: Iterable[str]) -> dict:
    result = {}
    for branch in branches:
        if not branch:
            continue
        cmd = ["git", "rev-parse", branch]
        output = sp.run(cmd, stdout=sp.PIPE, check=True)
        sha = output.stdout.decode().strip()
        result[sha] = branch
    return result


def commits_between_base_and_head(root: str) -> Generator[str, None, None]:
    cmd = ["git", "rev-list", f"{root}~..HEAD~"]
    output = sp.run(cmd, stdout=sp.PIPE, check=True)
    for commit in output.stdout.decode().split("\n"):
        commit = commit.strip()
        if commit:
            yield commit


if __name__ == "__main__":
    branches = fetch_branches()
    branch_refs = map_branch_names_to_shas(branches)
    root = os.environ.get("REVIEW_BASE", "main")
    for commit in commits_between_base_and_head(root):
        branch_name = branch_refs.get(commit)
        if branch_name:
            print(branch_name)
            raise SystemExit(0)
