name: Build
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths-ignore:
      - bin
      - .pre-commit-config.yaml
      - README.md
      - LICENSE
  push:
    branches:
      - main
    paths-ignore:
      - bin
      - .pre-commit-config.yaml
      - README.md
      - LICENSE
jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - run: df -h
      - name: Increase build space
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: df -h
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - uses: cachix/cachix-action@v16
        with:
          name: mindriot101-home
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix build '.#homeConfigurations.x86_64-linux.simon.activationPackage'

  minimal:
    strategy:
      matrix:
        runtime:
          - os: ubuntu-latest
            property: x86_64-linux
          - os: macos-latest
            property: x86_64-darwin
      fail-fast: true
    runs-on: ${{ matrix.runtime.os }}
    steps:
      - run: df -h
      - name: Increase build space
        if: ${{ matrix.runtime.os == 'ubuntu-latest' }}
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: df -h
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - uses: cachix/cachix-action@v16
        with:
          name: mindriot101-home
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix build .#homeConfigurations.${{ matrix.runtime.property }}.minimal.activationPackage

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - uses: cachix/cachix-action@v16
        with:
          name: mindriot101-home
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix build '.#homeConfigurations.x86_64-darwin.simon.activationPackage'
